CREATE TABLE IF NOT EXISTS users (id UUID PRIMARY KEY,name TEXT NOT NULL,username TEXT UNIQUE NOT NULL,email TEXT UNIQUE,email_verified_at TIMESTAMPTZ,role TEXT NOT NULL CHECK (role IN ('ADMIN','TEACHER','STUDENT')),password_hash TEXT NOT NULL,password_algo TEXT NOT NULL DEFAULT 'argon2id',created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),disabled_at TIMESTAMPTZ);
CREATE INDEX IF NOT EXISTS idx_users_username ON users (username);
CREATE INDEX IF NOT EXISTS idx_users_role ON users (role);
CREATE TABLE IF NOT EXISTS classes (id UUID PRIMARY KEY,name TEXT NOT NULL,teacher_id UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW());
CREATE TABLE IF NOT EXISTS enrollments (id UUID PRIMARY KEY,class_id UUID NOT NULL REFERENCES classes(id) ON DELETE CASCADE,student_id UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),UNIQUE (class_id, student_id));
CREATE TABLE IF NOT EXISTS modules (id UUID PRIMARY KEY,title TEXT NOT NULL,year_level INT NOT NULL CHECK (year_level BETWEEN 7 AND 12),syllabus_ref TEXT,status TEXT NOT NULL DEFAULT 'active',created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW());
CREATE TABLE IF NOT EXISTS assignments (id UUID PRIMARY KEY,module_id UUID NOT NULL REFERENCES modules(id) ON DELETE CASCADE,class_id UUID NOT NULL REFERENCES classes(id) ON DELETE CASCADE,assigned_by UUID NOT NULL REFERENCES users(id) ON DELETE SET NULL,due_at TIMESTAMPTZ,created_at TIMESTAMPTZ NOT NULL DEFAULT NOW());
CREATE TABLE IF NOT EXISTS progress (id UUID PRIMARY KEY,module_id UUID NOT NULL REFERENCES modules(id) ON DELETE CASCADE,student_id UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,status TEXT NOT NULL CHECK (status IN ('not_started','in_progress','completed')),score NUMERIC(5,2),started_at TIMESTAMPTZ,completed_at TIMESTAMPTZ,last_event_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),UNIQUE (module_id, student_id));
CREATE TABLE IF NOT EXISTS login_attempts (id UUID PRIMARY KEY,username_hash TEXT NOT NULL,ip_hash TEXT NOT NULL,attempted_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),success BOOLEAN NOT NULL);
CREATE TABLE IF NOT EXISTS refresh_tokens (id UUID PRIMARY KEY,user_id UUID NOT NULL REFERENCES users(id) ON DELETE CASCADE,token_hash TEXT NOT NULL,created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),expires_at TIMESTAMPTZ NOT NULL,revoked_at TIMESTAMPTZ,device_label TEXT);
CREATE TABLE IF NOT EXISTS audit_log (event_id UUID PRIMARY KEY,ts TIMESTAMPTZ NOT NULL DEFAULT NOW(),actor_user_id UUID REFERENCES users(id) ON DELETE SET NULL,actor_role TEXT,ip_hash TEXT,user_agent_hash TEXT,action TEXT NOT NULL,object_type TEXT,object_id TEXT,before_snapshot JSONB,after_snapshot JSONB,status TEXT NOT NULL CHECK (status IN ('success','deny','error')),request_id TEXT,prev_hash TEXT);
CREATE INDEX IF NOT EXISTS idx_audit_ts ON audit_log (ts DESC);
CREATE INDEX IF NOT EXISTS idx_audit_actor ON audit_log (actor_user_id);